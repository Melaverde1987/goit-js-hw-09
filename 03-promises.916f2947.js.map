{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAwBA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUU,MAAAT,IAEpBM,EAAO,CAAEE,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAIRU,MAAK,EAACF,SAAEA,EAAQC,MAAEA,MACjBb,EAAAe,OAAOC,QAAQ,uBAAqBJ,QAAiBC,MAAU,IAGhEI,OAAM,EAACL,SAAEA,EAAQC,MAAEA,MAClBb,EAAAe,OAAOG,QAAQ,sBAAoBN,QAAiBC,MAAU,G,CAzCvDM,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MACEC,UAAUX,MAAEA,EAAKY,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cAEV,IAAIC,EAAcC,OAAOhB,EAAMiB,OAC3BC,EAAaF,OAAOJ,EAAKK,OACzBE,EAAeH,OAAOH,EAAOI,OAEjC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAcC,IACjC/B,EAAc+B,EAAGL,GACjBA,GAAeG,EAGjBT,EAAMK,cAAcO,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let delayNumber = Number(delay.value);\n  let stepNumber = Number(step.value);\n  let amountNumber = Number(amount.value);\n\n  for (let i = 1; i <= amountNumber; i++) {\n    createPromise(i, delayNumber);\n    delayNumber += stepNumber;\n  }\n\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  promise\n    .then(({ position, delay }) => {\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      //alert(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      //alert(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","delay","then","Notify","success","catch","failure","document","querySelector","addEventListener","event","preventDefault","elements","step","amount","currentTarget","delayNumber","Number","value","stepNumber","amountNumber","i","reset"],"version":3,"file":"03-promises.916f2947.js.map"}